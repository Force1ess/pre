O(n²):
选择排序：完整扫描序列，依次选出第n小
交换排序：冒泡排序--交换不符合次序的相邻元素
插入排序：线性插入---从旧序列中依次取出插入有序的新序列，使之仍然有序，新序列的0位存放待插入数据，如果0位被使用，整体元素右移
	折半查找插入-在插入新序列时选用折半查找算法
	希尔排序-先对间隔为g的部分元素进行线性插入排序，排序比较的结果直接应用于原序列进行两两交换，然后逐渐减小g直到为1
附-间接排序：以索引数组来代表数据的位置
	O(NlogN)
	二叉查找树排序
	堆：
	完全树：最底层外全满，且最底层的节点处于左边
	堆次序：节点的数据大于等于子女的数据
	删除元素：把删除位置替换为最后一个元素，然后进行下调算法
	下调算法，1.选出较大的且在n范围内的子树2.如果子树比根大，调换，否则退出
	插入元素：插入到最后一个，然后进行上调算法
	堆排序：1.完全二叉树到堆的转化：进行建堆，从最后一个非叶元素开始进行下调
		2.将根与尾节点交换，然后对根进行下调算法，将取出的元素依次排序
	快排改进：1.首中尾取中位数
		2.对小于一点长度短列表插入排序
	内外部排序：数据存在内存还是外存
	归并排序：对有序的两个序列从首位开始比较进行插入生存序列的合并有序操作
	折半归并排序：1.把所有元素交替加入两个序列，比较两序列头元素，有序插入
			2。重复，从n/2对有序列到2个有序列，进行归并
	自然归并：1.对原始序列进行扫描时，分为n个有序列，后交替划为2个
		2.每个序列依次加入
		3.与折半相比，序列不是2的倍数，操作前先扫描划分
	基数排序：从右往左从下往上把他们依次分布到各仓，重复